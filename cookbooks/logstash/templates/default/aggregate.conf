input {
  file {
    type => "nginx"
    path => "/var/log/nginx/*"
    exclude => "*.gz"
  }
}
filter {
  if [type] == "nginx" {
    grok {
      match => { "message" => "%{IPORHOST:clientip} (?:-|%{USER:ident}) (?:-|%{USER:auth}) \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|-)\" %{NUMBER:response} (?:-|%{NUMBER:bytes})" }
    }
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    aggregate {
      task_id => "%{host}"
      code => "map['response'] ||= 0 ;
        arrayofresponse ||= [];
        arrayofresponse += arrayofresponse.push(event.get('response'));
        map['response'] = arrayofresponse.length"
      push_map_as_event_on_timeout => true
      timeout => 30 # 1 hour timeout, user activity will be considered finished one hour after the first event, even if events keep coming
      timeout_tags => ['_aggregatetimeout']
    }
  }
}
output { stdout { codec => rubydebug } }